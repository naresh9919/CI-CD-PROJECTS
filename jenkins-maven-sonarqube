         Deploy a WAR file on Tomcat Server using Jenkins


# Install Jenkins on AWS EC2

source code : https://github.com/ynareshbabu/war-file--tomcat.git

### Prerequisites
1. EC2 Instance 
   - With Internet Access
   - Security Group with Port `8080` open for internet
1. Java v1.8.x 
   #   yum install fontconfig java-11-openjdk
   java -version
   
   vi ~/.bash_profile
      
   find /usr/lib/jvm/java-11* | head -n 3
   JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.13.0.8-1.amzn2.0.3.x86_64
   export JAVA_HOME
   PATH=$PATH:$JAVA_HOME
   
   source .bash_profile

## Install Jenkins
   yum -y install wget
   sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
   sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
   yum -y install jenkins

   ### Start Jenkins
   # Start jenkins service
   service jenkins start

   # Setup Jenkins to start at boot,
   chkconfig jenkins on
   ```
   http://YOUR-SERVER-PUBLIC-IP:8080
   ```
  #### Configure Jenkins
- The default Username is `admin`
- Grab the default password 
- Password Location:`/var/lib/jenkins/secrets/initialAdminPassword`
- `Skip` Plugin Installation;
- Change admin password
   - `Admin` > `Configure` > `Password`
- Configure `java` path
  - `Manage Jenkins` > `Global Tool Configuration` > `JDK`  
- Create another admin user id


                   MAVEN INSTALLATION


Install Apache Maven

# cd /opt/
# wget https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
# tar -xf apache-maven-3.8.6-bin.tar.gz
# mv apache-maven-3.8.6/ maven/

Configure Apache Maven Environment

# cd /etc/profile.d/
# vim maven.sh

# Apache Maven Environment Variables
# MAVEN_HOME for Maven 1 - M2_HOME for Maven 2
export M2_HOME=/usr/local/src/apache-maven
export PATH=${M2_HOME}/bin:${PATH}

# chmod +x maven.sh
# source /etc/profile.d/maven.sh

Check Apache Maven Version

# mvn --version


Setup maven project on jenkins

# install maven integration pluggin

How to install plugings

--> manage jenkins --> manage plugings --> available --> select plugings --> install without restart

how to add path on global tool configuration

--> manage jenkins --> global tool configuration --> maven --> home=maven 3.8 --> maven_home= /opt/maven --> save
                   

                            SONARQUBE INSTALLATION
       

What is Sonarqube?

Sonarqube is free great tool which is most popular tool all over the world and used for source code measurement, code analysis.

Installation and setup sonarqube server on centos

# amazon-linux-extras install java-openjdk11 -y


[root@localhost ~]# cd /opt

# wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.9.56886.zip

# unzip sonarqube-8.9.9.56886.zip
# mv sonarqube-8.9.9.56886 sonarqube
# cd sonarqube
# cd logs
# useradd sonaradmin
# chown -R sonaradmin:sonaradmin /opt/sonarqube
# su - sonaradmin
# cd /opt/sonarqube/bin
# cd linux-x86-64
# ./sonar.sh start
# ./sonar.sh status

To start sonarqube service we need to go “/opt/sonarqube/bin/linux-x86-64” directory and execute the below command.

#./sonar.sh start
After starting this service we open the browser and type the following url to access the sonar web interface.

http:// server-ip address:9000

after login to sonarqube you need to change password


                           SONARQUBE INTEGRATION ON JENKINS


# install sonar scanner pluggin

How to install plugings

--> manage jenkins --> manage plugings --> available --> select plugings --> install without restart

--> go to sonarqube --> create project and generate key --> save anywhere

how to add path on global tool configuration

--> manage jenkins --> global tool configuration --> SonarQube Scanner --> home=sonarqube 4.7.0 --> install automatically-->save

--> Manage Jenkins --> Credentials --> add 	secret text --> id: sonarqube password (sonar-user-password) --> save

Run freestyle project

--> new item --> freestyle project --> description= this sonar project implementation --> git source code url --> build enviranment (time stamp)
      build ( invokar top level maven targets) --> goals (clean install sonar:sonar) --> save --> build now --> select project --> console output successed

ANALYSIS SUCCESSFUL, you can browse http://13.126.63.197:9000/dashboard?id=com.example.app%3ASimpleTomcatWebApp

copy and open on anothe tabe it will displey code quality
     
